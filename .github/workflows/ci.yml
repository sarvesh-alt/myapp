name: Java CI with Gradle

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-java:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Fixed Windows runner syntax

    steps:
      - name: Echo message
        run: echo "Hi, I am from COSC 1209 class"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 8 (Temurin)
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        if: runner.os != 'Windows'  # Skip for Windows
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash  # Ensure consistent shell usage

      - name: Run tests with Gradle
        run: ./gradlew test
        shell: bash

      # Install Docker on macOS
      - name: Install Docker on macOS
        if: runner.os == 'macOS'
        run: |
          brew install --cask docker
          open /Applications/Docker.app
          sleep 30
          docker --version

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        if: runner.os == 'macOS' || runner.os == 'Linux'
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver: docker-container
          buildkitd-flags: "--allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host"
          install: true  # Changed to true for proper installation

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: docker.io/sarveshalt/java-app:latest
          platforms: linux/amd64
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}