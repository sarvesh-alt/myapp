name: Java CI with Gradle and Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'

      # Gradle build steps remain the same
      - name: Grant execute permission for gradlew (Unix)
        if: runner.os != 'Windows'
        run: chmod +x gradlew

      - name: Build with Gradle (Windows)
        if: runner.os == 'Windows'
        run: .\gradlew.bat build
        shell: cmd

      - name: Build with Gradle (Unix)
        if: runner.os != 'Windows'
        run: ./gradlew build
        shell: bash

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Unix build using original Dockerfile
      - name: Build and push Docker image (Unix)
        if: runner.os != 'Windows'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/java-app:latest
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/java-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/java-app:buildcache,mode=max

      # Windows build using Windows-specific Dockerfile
      - name: Build and push Docker image (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          Write-Host "Starting Windows Docker build..."
          
          # Create Windows-specific Dockerfile
          @"
          FROM mcr.microsoft.com/windows/nanoserver:1809
          
          WORKDIR C:/app
          
          COPY ./build/libs/java-app-1.0-SNAPSHOT.jar .
          
          EXPOSE 8080
          
          ENTRYPOINT ["java", "-jar", "java-app-1.0-SNAPSHOT.jar"]
          "@ | Out-File -Encoding ASCII Dockerfile.windows
          
          # Build the image using Windows-specific Dockerfile
          docker build -f Dockerfile.windows -t ${{ secrets.DOCKER_USERNAME }}/java-app:windows-latest .
          if ($LASTEXITCODE -ne 0) {
              Write-Host "Docker build failed"
              exit 1
          }
          
          # Push the image
          docker push ${{ secrets.DOCKER_USERNAME }}/java-app:windows-latest
          if ($LASTEXITCODE -ne 0) {
              Write-Host "Docker push failed"
              exit 1
          }