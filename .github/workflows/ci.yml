name: Java CI with Gradle

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-java:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Echo message
      run: echo "Hi, I am from COSC 1209 class"

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 8 (Temurin)
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run tests with Gradle
      run: ./gradlew test

    # Install Docker on macOS
    - name: Install Docker on macOS
      if: runner.os == 'macOS'
      run: |
        brew install --cask docker
        open /Applications/Docker.app
        # Wait for Docker to start
        echo "Waiting for Docker to start..."
        while ! docker info > /dev/null 2>&1; do
          sleep 1
        done
        echo "Docker is up and running!"

    # Set up Docker Buildx for all environments (Linux, macOS, Windows)
    - name: Set up Docker Buildx
      if: runner.os != 'macOS'  # Skip on macOS as it is not needed
      uses: docker/setup-buildx-action@v2
      with:
        version: latest

    - name: Set up QEMU for multi-platform builds
      if: runner.os != 'macOS'  # Skip on macOS as it is not needed
      uses: docker/setup-qemu-action@v2

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build Docker image
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: docker.io/sarveshalt/java-app:latest
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
