name: Java CI with Gradle and Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 8 to match your Dockerfile
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'

      # Handle Gradle permissions
      - name: Grant execute permission for gradlew (Unix)
        if: runner.os != 'Windows'
        run: chmod +x gradlew

      # Build with Gradle - ensuring java-app-1.0-SNAPSHOT.jar is created
      - name: Build with Gradle (Windows)
        if: runner.os == 'Windows'
        run: .\gradlew.bat build
        shell: cmd

      - name: Build with Gradle (Unix)
        if: runner.os != 'Windows'
        run: ./gradlew build
        shell: bash

      # Verify JAR file exists
      - name: Verify JAR file
        run: |
          if [ -f "build/libs/java-app-1.0-SNAPSHOT.jar" ]; then
            echo "JAR file exists"
          else
            echo "JAR file not found"
            exit 1
          fi
        shell: bash

      # Setup Docker for macOS
      - name: Set up Docker (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install --cask docker
          open /Applications/Docker.app
          timeout=120
          while ! docker info > /dev/null 2>&1; do
            sleep 1
            ((timeout--))
            if [ $timeout -le 0 ]; then
              echo "Docker failed to start"
              exit 1
            fi
          done

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push for all platforms
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/java-app:latest
            ${{ secrets.DOCKER_USERNAME }}/java-app:${{ github.sha }}
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/java-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/java-app:buildcache,mode=max